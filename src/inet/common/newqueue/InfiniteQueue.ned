//
// Copyright (C) OpenSim Ltd.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, see http://www.gnu.org/licenses/.
//

package inet.common.newqueue;

simple InfiniteQueue extends PacketQueueBase like IPacketQueue
{
    parameters:
        string comparatorClass = default(""); // determines the order of packets in the queue, the parameter must be the name of a C++ class which implements the IPacketComparator C++ interface and is registered via Register_Class
        string comparatorFunction = default(""); // determines the order of packets in the queue, the parameter must be the name of a C++ function which implements the PacketComparatorFunction C++ function and is registered via Register_Function
        string displayStringTextFormat = default("%p packets\n%l");
        @class(queue::InfiniteQueue);
        @signal[packetEnqueued](type=inet::Packet);
        @signal[packetDequeued](type=inet::Packet);
        @statistic[queueingTime](title="queueing times"; source=queueingTime(packetDequeued); record=histogram,vector; unit=s; interpolationmode=none);
        @statistic[queueLength](title="queue length"; source=count(packetEnqueued) - count(packetDequeued); record=max,timeavg,vector; interpolationmode=sample-hold);
    gates:
        input in;
        output out;
}
